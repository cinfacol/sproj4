# Generated by Django 4.0 on 2022-03-20 23:17

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, unique, max-255', max_length=255, unique=True, verbose_name='product attribute name')),
                ('description', models.TextField(help_text='format: required', verbose_name='product attribute description')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, unique, max-255', max_length=255, unique=True, verbose_name='brand name')),
                ('is_active', models.BooleanField(default=True, help_text='format: true=brand visible', verbose_name='brand visibility')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max-100', max_length=100, verbose_name='category name')),
                ('slug', models.SlugField(help_text='format: required, letters, numbers, underscore, or hyphens', max_length=150, verbose_name='category safe URL')),
                ('is_active', models.BooleanField(default=True, help_text='format: true=category visible', verbose_name='category visibility')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='products.category', verbose_name='parent of category')),
            ],
            options={
                'verbose_name': 'product category',
                'verbose_name_plural': 'product categories',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='images/default.png', help_text='format: required, default-default.png', upload_to='images/', verbose_name='product image')),
                ('alt_text', models.CharField(help_text='format: required, max-255', max_length=255, verbose_name='alternative text')),
                ('is_feature', models.BooleanField(default=False, help_text='format: default=false, true=default image', verbose_name='product default image')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format: Y-m-d H:M:S', verbose_name='product visibility')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='format: Y-m-d H:M:S', verbose_name='date sub-product created')),
            ],
            options={
                'verbose_name': 'product image',
                'verbose_name_plural': 'product images',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, unique, max-255', max_length=255, unique=True, verbose_name='type of product')),
                ('is_active', models.BooleanField(default=True, help_text='format: true=product visible', verbose_name='product visibility')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max-255', max_length=255, verbose_name='product name')),
                ('slug', models.SlugField(help_text='format: required, letters, numbers, underscores or hyphens', max_length=255, verbose_name='product safe URL')),
                ('web_id', models.CharField(help_text='format: required, unique', max_length=50, unique=True, verbose_name='product website ID')),
                ('description', models.TextField(help_text='format: required', verbose_name='product description')),
                ('retail_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'the price must be between 0 and 9.999.999.99.'}}, help_text='format: maximum price 9.999.999.99', max_digits=9, verbose_name='recommended retail price')),
                ('store_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'the price must be between 0 and 9.999.999.99.'}}, help_text='format: maximum price 9.999.999.99', max_digits=9, verbose_name='regular store price')),
                ('percent_discount_price', models.DecimalField(blank=True, decimal_places=2, error_messages={'name': {'max_length': 'the value must be between 0 and 99.99.'}}, help_text='format: maximum value 99.99', max_digits=5, null=True, verbose_name='discount percentage')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, error_messages={'name': {'max_length': 'the price must be between 0 and 9.999.999.99.'}}, help_text='format: maximum price 9.999.999.99', max_digits=9, null=True, verbose_name='discount price')),
                ('weight', models.FloatField(verbose_name='product weight')),
                ('is_active', models.BooleanField(default=True, help_text='format: true=product visible', verbose_name='product visibility')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format: Y-m-d H:M:S', verbose_name='date product created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='format: Y-m-d H:M:S', verbose_name='date product last updated')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brand', to='products.brand')),
                ('category', mptt.fields.TreeManyToManyField(to='products.Category')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='products.media')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.type', verbose_name='Product Type')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.IntegerField(default=0, help_text='format: required, default-0', verbose_name='Client Id')),
                ('status', models.CharField(help_text='format: required, max-50', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format: Y-m-d H:M:S', verbose_name='created at')),
                ('product', models.ManyToManyField(related_name='favorite_product', to='products.Product')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.CharField(help_text='format: required, max-255', max_length=255, verbose_name='attribute value')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attribute', to='products.attribute')),
            ],
        ),
        migrations.AddField(
            model_name='attribute',
            name='product',
            field=models.ManyToManyField(to='products.Product', verbose_name='Product_Attribute'),
        ),
    ]
